{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "WebVMInstance": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of Web VMs to deploy"
      }
    },
    "WebLBType": {
      "type": "string",
      "allowedValues": [
        "ext",
        "int",
        "none"
      ],
      "metadata": {
        "description": "Choose the type of LB needed"
      }
    },
    "ApiSrvVMInstance": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of ApiSrv VMs to deploy"
      }
    },
    "ApiSrvLBType": {
      "type": "string",
      "allowedValues": [
        "ext",
        "int",
        "none"
      ],
      "metadata": {
        "description": "Choose the type of LB needed"
      }
    },
    "EmailVMInstance": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Number of Email Analytics VMs to deploy"
      }
    },
    "EmailLBType": {
      "type": "string",
      "allowedValues": [
        "ext",
        "int",
        "none"
      ],
      "metadata": {
        "description": "Choose the type of LB needed"
      }
    },
    "MongoVMInstance": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Number of Mongo VMs to deploy"
      }
    },
    "MongoLBType": {
      "type": "string",
      "allowedValues": [
        "ext",
        "int",
        "none"
      ],
      "metadata": {
        "description": "Choose the type of LB needed"
      }
    },
    "VNetName": {
      "type": "string",
      "defaultValue": "vnet01",
      "metadata": {
        "description": "Name of the VNet"
      }
    },
    "Location": {
      "type": "string",
      "defaultValue": "southindia",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "variables": {
    "virtualNetworkName": "[parameters('VNetName')]",
    "addressPrefix": "10.0.0.0/16",
    "subnet1Name": "Subnet-1",
    "subnet1Prefix": "10.0.0.0/24",
    "subnet1Ref": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('virtualNetworkName'),variables('subnet1Name'))]",
    "VMProperties": [
      {
        "condition": "[greater(parameters('WebVMInstance'),0)]",
        "prefix": "web",
        "size": "standard_ds2_v2",
        "count": "[if(equals(parameters('WebVMInstance'), 0), 1, parameters('WebVMInstance'))]",
        "lbtype": "[parameters('WebLBType')]",
        "location": "[parameters('Location')]",
        "cloudinitdata": "[concat('#cloud-config\n', 'package_upgrade: true\n','packages:\n','  - nginx\n','  - nodejs\n','  - npm\n','runcmd:\n','  - apt-get install mysql-server -y\n')]"
      },
      {
        "condition": "[greater(parameters('ApiSrvVMInstance'),0)]",
        "prefix": "apisrv",
        "size": "standard_ds2_v2",
        "count": "[if(equals(parameters('ApiSrvVMInstance'), 0), 1, parameters('ApiSrvVMInstance'))]",
        "lbtype": "[parameters('ApiSrvLBType')]",
        "location": "[parameters('Location')]",
        "cloudinitdata": "[concat('#cloud-config\n', 'package_upgrade: true\n','packages:\n','  - nginx\n','  - nodejs\n','  - npm\n','runcmd:\n','  - apt-get install mysql-server -y\n')]"
      },
      {
        "condition": "[greater(parameters('EmailVMInstance'),0)]",
        "prefix": "email",
        "size": "standard_ds2_v2",
        "count": "[if(equals(parameters('EmailVMInstance'), 0), 1, parameters('EmailVMInstance'))]",
        "lbtype": "[parameters('EmailLBType')]",
        "location": "[parameters('Location')]",
        "cloudinitdata": "[concat('#cloud-config\n', 'package_upgrade: true\n','packages:\n','  - nginx\n','  - nodejs\n','  - npm\n','runcmd:\n','  - apt-get install mysql-server -y\n')]"
      },
      {
        "condition": "[greater(parameters('MongoVMInstance'),0)]",
        "prefix": "mongo",
        "size": "standard_ds2_v2",
        "count": "[if(equals(parameters('MongoVMInstance'), 0), 1, parameters('MongoVMInstance'))]",
        "lbtype": "[parameters('MongoLBType')]",
        "location": "[parameters('Location')]",
        "cloudinitdata": "[concat('#cloud-config\n', 'package_upgrade: true\n','packages:\n','  - nginx\n','  - nodejs\n','  - npm\n','runcmd:\n','  - apt-get install mysql-server -y\n')]"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "apiVersion": "2016-03-30",
      "location": "[parameters('Location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('subnet1Prefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "[concat(variables('VMProperties')[copyIndex()].prefix, 'av')]",
      "copy": {
        "name": "avsetloop",
        "count": "[length(variables('VMProperties'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "https://raw.githubusercontent.com/ashisa/armlinked/master/avset.json",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Condition": { "value": "[variables('VMProperties')[copyIndex()].condition]" },
          "Name": { "value": "[concat(variables('VMProperties')[copyIndex()].prefix, 'avset')]" },
          "Location": { "value": "[parameters('Location')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "[concat(variables('VMProperties')[copyIndex()].prefix, 'lb')]",
      "copy": {
        "name": "lbloop",
        "count": "[length(variables('VMProperties'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat('https://raw.githubusercontent.com/ashisa/armlinked/master/nic-', variables('VMProperties')[copyIndex()].lbtype, 'lb.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Condition": { "value": "[variables('VMProperties')[copyIndex()].condition]" },
          "LBCondition": { "value": "[if(equals(variables('VMProperties')[copyIndex()].lbtype, 'none'), bool('false'), bool('true'))]" },
          "Name": { "value": "[variables('VMProperties')[copyIndex()].prefix]" },
          "Count": { "value": "[variables('VMProperties')[copyIndex()].count]" },
          "subnet1Ref": { "value": "[variables('subnet1Ref')]" },
          "Location": { "value": "[parameters('Location')]" }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2018-05-01",
      "name": "[concat(variables('VMProperties')[copyIndex()].prefix, 'vm')]",
      "copy": {
        "name": "vmloop",
        "count": "[length(variables('VMProperties'))]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat('https://raw.githubusercontent.com/ashisa/armlinked/master/vms.json')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Condition": { "value": "[variables('VMProperties')[copyIndex()].condition]" },
          "Name": { "value": "[variables('VMProperties')[copyIndex()].prefix]" },
          "Location": { "value": "[parameters('Location')]" },
          "Count": { "value": "[variables('VMProperties')[copyIndex()].count]" },
          "Size": { "value": "Standard_D2_V2" },
          "CloudInitData": { "value": "[concat('#cloud-config\n', 'package_upgrade: true\n','packages:\n','  - nginx\n','  - nodejs\n','  - npm\n','runcmd:\n','  - apt-get install mysql-server -y\n')]" }
        }
      }
    }
  ]
}
